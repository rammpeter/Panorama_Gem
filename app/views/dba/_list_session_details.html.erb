<div style="clear:both; padding: 5px;"></div>
<%= render_page_caption("#{t(:dba_list_session_details_caption, :default=>'Details for session')} SID=#{@sid}, Serial#=#{@serialno}, Instance=#{@instance}, #{"CDB=#{@dbsessions[0].con_id} (#{@dbsessions[0].container_name}), " if get_current_database[:cdb]}#{localeDateTime(Time.now)}", get_recall_params_info_for_render_page_caption) %>

<% @prev_update_area = @update_area
   @update_area = get_unique_area_id

   tx_id_data_title = proc do |rec|
     if rec.tx_id
       "%t\nStart time of transaction = #{rec.start_time}"
     else
       "%t"
     end
   end

  link_tx_id = proc do |rec|
    ajax_link(rec.tx_id, {
              controller: :storage,
              action:     :list_undo_transactions,
              instance:   @instance,
              sid:        @sid,
              serialno:   @serialno,
              update_area:@update_area
             },
      :title=> "Show transaction details")
  end

   column_options =
 [
   {:caption=>"Status",         :data=>proc{|rec| rec.status},          :title=>"Status"},
   {:caption=>"Client-Info",    :data=>proc{|rec| rec.client_info},     :title=>"Client-Info"},
   {:caption=>"Module",         :data=>proc{|rec| rec.module},          :title=>"Module"},
   {:caption=>"Action",         :data=>proc{|rec| rec.action},          :title=>"Action"},
   {:caption=>"Username",       :data=>proc{|rec| rec.username},        :title=>"Database Username"},
   {:caption=>"Audit-SID",      :data=>proc{|rec| rec.audsid},          :title=>"Session-ID for auditing (gv$Session.AUDSID). Corresponds with DBA_Audit_Trail.Session_ID or gv$XML_Audit_Trail.Session_ID"},
   {:caption=>"Sh. Proc.",      :data=>proc{|rec| rec.spid},            :title=>"Process ID of database shadow process"},
   {:caption=>"PID",            :data=>proc{|rec| rec.pid},             :title=>"Oracle process identifier"},
   {:caption=>"Machine",        :data=>proc{|rec| link_machine_ip_info(@update_area, rec.machine)}, :title=>"Client machine"},
   {:caption=>"OSUser",         :data=>proc{|rec| rec.osuser},          :title=>"Client OS user"},
   {:caption=>"Process",        :data=>proc{|rec| rec.process},         :title=>"Client process ID"},
   {:caption=>"Program",        :data=>proc{|rec| rec.program},         :title=>"Client program"},
   {:caption=>"Logon-time",     :data=>proc{|rec| localeDateTime(rec.logon_time)},  :title=>"Logon-time of session"},
   {:caption=>"Last active start",:data=>proc{|rec| localeDateTime(rec.last_call)}, :title=>"Start of last ACTIVE-phase"},
   {:caption=>'Tx. ID',         :data=>link_tx_id,                      :title=>"Transaction-ID if session has an active transaction", data_title: tx_id_data_title},
   {:caption=>'Auth. type',     :data=>proc{|rec| rec.authentication_type}, :title=>'How the user was authenticated. See V$SESSION_CONNECT_INFO.Authentication_Type'},
 ]
column_options << {:caption=>'Client char set',     :data=>proc{|rec| rec.client_charset},     :title=>'Client character set as specified in the NLS_LANG environment variable or in the OCIEnvNlsCreate() call; Unknown if the Oracle client is older than release 11.1 or the connection is through the JDBC thin driver'} if get_db_version >= '11.2'
column_options << {:caption=>'Client connection',   :data=>proc{|rec| rec.client_connection},  :title=>'Client server connection flags'} if get_db_version >= '11.2'
column_options << {:caption=>'Client OCI lib',      :data=>proc{|rec| rec.client_oci_library}, :title=>'OCI client library'} if get_db_version >= '11.2'
column_options << {:caption=>'Client version',      :data=>proc{|rec| rec.client_version},     :title=>'Client library version number'} if get_db_version >= '11.2'
column_options << {:caption=>'Client driver',       :data=>proc{|rec| rec.client_driver},      :title=>'Client driver name'} if get_db_version >= '11.2'

%>
<%= gen_slickgrid(@dbsessions, column_options) %>

<% if @pq_coordinator.count > 0 # Betrachete Session ist ein PQ-Slave, dann Info zum Coordinator hinzufÃ¼gen %>
    <%

       def link_session(rec)
         ajax_link("#{rec.sid},#{rec.serialno}", {
                   :action => "show_session_detail",
                   :instance => rec.inst_id,
                   :sid      => rec.sid,
                   :serialno => rec.serialno,
                   :update_area => @update_area
                  },
           :title=> "Show details of database session")
       end

    column_options =
     [
       {:caption=>"SID/SN",         :data=>proc{|rec| link_session(rec)},    :title=>"SID, serial number of query coordinator session"},
       {:caption=>"Status",         :data=>proc{|rec| rec.status},          :title=>"Status"},
       {:caption=>"SQL-ID",         :data=>proc{|rec| link_sql_id(@update_area, rec.inst_id, rec.sql_id, rec.sql_child_number)},  :title=>"SQL-ID of query coordinator session"},
       {:caption=>"Client-Info",    :data=>proc{|rec| rec.client_info},     :title=>"Client-Info"},
       {:caption=>"Module",         :data=>proc{|rec| rec.module},          :title=>"Module"},
       {:caption=>"Action",         :data=>proc{|rec| rec.action},          :title=>"Action"},
       {:caption=>"Username",       :data=>proc{|rec| rec.username},        :title=>"Database Username"},
       {:caption=>"Sh.Proc.",       :data=>proc{|rec| rec.spid},            :title=>"Process ID of database shadow process"},
       {:caption=>"Machine",        :data=>proc{|rec| link_machine_ip_info(@update_area, rec.machine)}, :title=>"Client machine"},
       {:caption=>"OSUser",         :data=>proc{|rec| rec.osuser},          :title=>"Client OS user"},
       {:caption=>"Process",        :data=>proc{|rec| rec.process},         :title=>"Client process ID"},
       {:caption=>"Program",        :data=>proc{|rec| rec.program},         :title=>"Client program"},
       {:caption=>"Logon-time",     :data=>proc{|rec| localeDateTime(rec.logon_time)},  :title=>"Logon-time of session"},
       {:caption=>"Last active start",:data=>proc{|rec| localeDateTime(rec.last_call)}, :title=>"Start of last ACTIVE-phase"},
     ]

    %>
    <%= gen_slickgrid(@pq_coordinator, column_options, {:caption=>"Considered session SID=#{@sid}, Serial#=#{@serialno}, Instance=#{@instance} is PQ-slave, details for PQ-coordinator are:" }) %>

<% end %>

<%
  column_options = []
  column_options << {:caption=>"",                :data=>proc{|rec| rec[:caption]} }
  column_options << {:caption=>"SQL-ID",          :data=>proc{|rec| link_sql_id(@update_area, @instance, rec[:sql_id], rec[:sql_child_number])}, :title=>"Currently or previously executed SQL-ID"  }
  column_options << {:caption=>"C.",              :data=>proc{|rec| rec[:sql_child_number]}, :title=>"Child number of SQL", align: :right  }
  column_options << {:caption=>'SQL exec start',  :data=>proc{|rec| localeDateTime(rec[:sql_exec_start])},  :title=>"Start of current SQL execution"  }                         if get_db_version >= '11.1'
  column_options << {:caption=>'SQL exec ID',     :data=>proc{|rec| fn(rec[:sql_exec_id])},                 :title=>"ID / sequence of current SQL execution", :align=>:right  } if get_db_version >= '11.1'
  column_options << {:caption=>"SQL-Text", :data=>proc{|rec| "<pre class=\"monospace\">#{convert_word_wrap_comma(rec[:sql_text])}</pre>" }    }

%>
<div style="padding: 5px;"></div>


<%= gen_slickgrid(@sql_data, column_options) %>

<%
  link_category = proc do |rec|
    ajax_link(rec.category, {
              controller:   :dba_pga,
              action:       :list_process_memory_detail,
              instance:     @instance,
              pid:          @dbsession&.pid,
              category:     rec.category,
              update_area:  @update_area
             },
      :title=> "Show process memory details for this category")
  end

column_options =
 [
   {:caption=>"Category",       :data=>link_category,            :title=>"Category"},
   {:caption=>"Allocated",      :data=>proc{|rec| fn(rec.allocated)},       :align=>:right,    :title=>"Bytes of PGA memory allocated by the process for the category. For the 'Freeable' category, it is the amount of free PGA memory eligible to be released to the operating system."},
   {:caption=>"Used",           :data=>proc{|rec| fn(rec.used)},            :align=>:right,    :title=>"Bytes of PGA memory used by the process for the category. For 'Freeable', the value is zero. For 'Other', the value is NULL for performance reasons."},
   {:caption=>"Max Allocated",  :data=>proc{|rec| fn(rec.max_allocated)},   :align=>:right,    :title=>"Maximum bytes of PGA memory ever allocated by the process for the category."},
 ]

%>
<%= gen_slickgrid(@pmems, column_options, :caption=> "Process Memory (incl. PQ-Server) from GV$Process_Memory", :width=>:auto) %>

<div class="flex-row-container">
  <div class="flex-row-element">
    <%= ajax_submit("Wait-Status", {
               :action => :show_session_details_waits,
               :update_area => @update_area,
               :instance => @instance,
               :sid      => @sid,
               :serialno => @serialno
        }, :title => t(:dba_list_session_details_link_wait, :default=>'Show current wait status of session') )
    %>
  </div>
  <div class="flex-row-element">
    <%= ajax_submit("Locks", {
               :action => :show_session_details_locks,
               :update_area => @update_area,
               :instance => @instance,
               :sid      => @sid,
               :serialno => @serialno
        }, :title => t(:dba_list_session_details_link_locks, :default=>'Show locks of session') )
    %>
  </div>
  <div class="flex-row-element">
    <%= ajax_submit("Temp-Usage", {
               :action => :show_session_details_temp,
               :update_area => @update_area,
               :instance => @instance,
               :saddr      => @dbsession.saddr,
               :sid        => @sid,
               :serialno   => @serialno
        }, :title => t(:dba_list_session_details_link_temp, :default=>'Show TEMP-usage of session') )
    %>
  </div>
  <div class="flex-row-element">
      <%=
        ajax_submit("#{@open_cursor_counts.total} #{t(:dba_list_session_details_link_open_cursor_caption, :default=>'open cursor')}", {
                   :action => "list_open_cursor_per_session",
                   :controller => :dba,
                   :update_area => @update_area,
                   :instance  => @instance,
                   :sid       => @sid,
                   :serialno  => @serialno
        }, :title=> t(:dba_list_session_details_link_open_cursor_hint, :default=>'Show open cursor of session (GV$OPEN_CURSOR) %{own_saddr} with identical SAddr', :own_saddr=>@open_cursor_counts.own_saddr))
      %>
  </div>
  <div class="flex-row-element">
    <%=
        ajax_submit('Objects accessed', {
                                   :controller  => :dba,
                                   :action      => :list_accessed_objects,
                                   :update_area => @update_area,
                                   :instance    => @instance,
                                   :sid         => @sid,
        }, :title=> 'List objects accessed by this session in library cache (from GV$Access)')
    %>
  </div>
  <div class="flex-row-element">
      <%=
        ajax_submit("Active Session History", {
                   :action => :show_prepared_active_session_history,
                   :controller => :active_session_history,
                   :update_area => @update_area,
                   :instance  => @instance,
                   :sid       => @sid,
                   :serialno  => @serialno
        }, :title=> t(:dba_list_session_details_link_ash, :default=>'Show wait history of session from Active Session History'))
      %>
  </div>
  <div class="flex-row-element">
      <%=
        ajax_submit("Session-Statistics", {
                   :action => :list_session_statistic,
                   :update_area => @update_area,
                   :instance  => @instance,
                   :sid       => @sid
        }, :title=> t(:dba_list_session_details_link_stat, :default=>'Show session statistics from V$SessStat'))
      %>
  </div>
  <div class="flex-row-element">
      <%=
        ajax_submit("Audit Trail", {
                                   :controller   => :dba_schema,
                                   :action       => :list_audit_trail,
                                   :sessionid    => @dbsession.audsid,
                                   :update_area  => @update_area
        }, :title=> "Show audit trail records from DBA_Audit_Trail"
        )
      %>
  </div>
  <div class="flex-row-element">
    <%=
        ajax_submit("Optimizer Env.", {
                                   :controller   => :dba,
                                   :action       => :list_session_optimizer_environment,
                                   :instance     => @instance,
                                   :sid          => @sid,
                                   :update_area  => @update_area
        }, :title=> "Show audit optimizer environment for this session"
        )
    %>
  </div>
  <div class="flex-row-element">
    <%= ajax_submit("SQL-Monitor (#{@sql_monitor_reports_count})", {
          controller:            :dba_history,
          action:                :list_sql_monitor_reports,
          update_area:           @update_area,
          instance:              @instance,
          sid:                   @sid,
          serialno:              @serialno,
          time_selection_start:  localeDateTime(@dbsession.logon_time, :minutes),
          time_selection_end:    localeDateTime(Time.now, :minutes),
      }, title: strings(:sql_monitor_list_title))
      %>
  </div>
</div>

<div id="<%= @update_area %>" style="clear: both;"></div>
