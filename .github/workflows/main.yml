# GitHub action recipe
# preconditions:
#   - Install Java
#     > wget https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.rpm
#     > rpm -Uvh jdk-17_linux-x64_bin.rpm && rm jdk-17_linux-x64_bin.rpm
#   - Install Google Chrome:
#     > wget "https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm"
#     > yum install liberation-fonts libXScrnSaver.x86_64 libappindicator-gtk3.x86_64 vulkan libgbm xdg-utils alsa-lib nspr nss
#     > rpm -i google-chrome-stable_current_x86_64.rpm
#   - Install jRuby
#     > curl -sSL https://get.rvm.io | bash
#     > source $HOME/.rvm/scripts/rvm
#     > rvm install ${JRUBY_VERSION}
#     > rvm --default use ${JRUBY_VERSION}
#     > gem install bundler


name: Panorama_Gem CI

on: [push]

jobs:
  test:
    runs-on: self-hosted

    strategy:
      max-parallel: 1
      matrix:
        management_pack_license: ["diagnostics_and_tuning_pack", "diagnostics_pack", "panorama_sampler", "none"]
    env:
      JRUBY_VERSION: jruby-9.3.2.0
      # Panorama dir after git clone
      # PANORAMA_PATH: /home/runner/work/Panorama_Gem/Panorama_Gem
      PANORAMA_PATH: /home/pramm/actions-runner/_work/Panorama_Gem/Panorama_Gem
      MANAGEMENT_PACK_LICENSE: ${{ matrix.management_pack_license }}

    steps:
    - uses: actions/checkout@v1

    - name: Check OS prerequisites
      run: |
        env
        docker ps -a
        docker images
        java -version

    - name: bundle install
      run: |
        source $HOME/.rvm/scripts/rvm
        bundle --version
        source $HOME/.rvm/scripts/rvm
        cd ${PANORAMA_PATH} && bundle install

    # create encypted wallet zip file to store in repository, add passphrase
    # gpg --symmetric --cipher-algo AES256 Wallet_panoramatest.zip
    - name: Decrypt Wallet for database access
      env:
        GPG_KEY_FOR_DB_WALLET_ENCRYPTION: ${{ secrets.GPG_KEY_FOR_DB_WALLET_ENCRYPTION }}
      run: |
        cd ${PANORAMA_PATH}/.github && ./decrypt_DB_wallet.sh
        cd ${PANORAMA_PATH}/.github && unzip Wallet_panoramatest.zip

    - name: run Test
      env:
        TEST_USERNAME: panorama_test
        TEST_PASSWORD: TryItOut2019
        TEST_TNS: panoramatest_tpurgent
      run: |
        source $HOME/.rvm/scripts/rvm
        export TNS_ADMIN=${PANORAMA_PATH}/.github
        echo "TNS_ADMIN=$TNS_ADMIN"
        echo "tnsnames.ora="
        cat $TNS_ADMIN/tnsnames.ora
        cd ${PANORAMA_PATH} && rake test

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: test.log
        path: test/dummy/log/test.log
